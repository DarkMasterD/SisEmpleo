@model SisEmpleo.Models.Viewmodels.EditarPerfilViewModel

@{
    ViewData["Title"] = "Editar Perfil";
}

<style>
    body {
        font-family: 'Poppins', sans-serif;
        background-color: #f4f6f8;
        color: #333;
    }

    .container {
        max-width: 900px;
    }

    h2 {
        font-weight: 600;
        font-size: 2rem;
    }

    .card {
        border: none;
        border-radius: 16px;
        box-shadow: 0 6px 16px rgba(0, 0, 0, 0.05);
        background-color: #fff;
    }

    .card-header {
        background-color: #f1f3f5;
        font-weight: 600;
        font-size: 1.25rem;
        border-top-left-radius: 16px;
        border-top-right-radius: 16px;
        padding: 1rem 1.5rem;
    }

    .card-body {
        padding: 1.5rem;
    }

    .form-group {
        margin-bottom: 1rem;
    }

    .form-label {
        font-weight: 500;
    }

    .form-control, .form-select {
        border-radius: 8px;
    }

    .btn-primary {
        border-radius: 30px;
        font-weight: 500;
        padding: 0.5rem 2rem;
    }
</style>

<div class="container mt-5">
    <h2 class="mb-4 text-center text-primary">Editar Perfil</h2>

    <form asp-action="EditarPerfil" method="post">
        @* Información personal *@
        <div class="card mb-4">
            <div class="card-header">Información Personal</div>
            <div class="card-body">
                <div class="form-group">
                    <label asp-for="Nombre" class="form-label"></label>
                    <input asp-for="Nombre" class="form-control" />
                    <span asp-validation-for="Nombre" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Apellidos" class="form-label"></label>
                    <input asp-for="Apellidos" class="form-control" />
                    <span asp-validation-for="Apellidos" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Email" class="form-label"></label>
                    <input asp-for="Email" class="form-control" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Telefono" class="form-label"></label>
                    <input asp-for="Telefono" class="form-control" />
                    <span asp-validation-for="Telefono" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Fecha_Nacimiento" class="form-label"></label>
                    <input asp-for="Fecha_Nacimiento" class="form-control" type="date" />
                    <span asp-validation-for="Fecha_Nacimiento" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="PaisId" class="form-label"></label>
                    <select asp-for="PaisId" class="form-select" asp-items="Model.Paises"></select>
                    <span asp-validation-for="PaisId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ProvinciaId" class="form-label"></label>
                    <select asp-for="ProvinciaId" class="form-select" asp-items="Model.Provincias"></select>
                    <span asp-validation-for="ProvinciaId" class="text-danger"></span>
                </div>
            </div>
        </div>

        @* Idiomas *@
        <div class="card mb-4">
            <div class="card-header">Idiomas</div>
            <div class="card-body">
                <div class="form-group">
                    <label class="form-label">Selecciona idiomas</label>
                    <select asp-for="IdiomaIds" asp-items="Model.IdiomasDisponibles" class="form-select" multiple></select>
                    <span asp-validation-for="IdiomaIds" class="text-danger"></span>
                </div>
            </div>
        </div>

        @* Habilidades *@
        <div class="card mb-4">
            <div class="card-header d-flex justify-content-between align-items-center">
                <span>Habilidades</span>
                <button type="button" class="btn btn-sm btn-primary" onclick="toggleAgregarHabilidad()">Agregar</button>
            </div>
            <div class="card-body">

                <div class="form-group mb-3">
                    <input type="text" id="buscarHabilidad" onkeyup="filtrarHabilidades()" class="form-control" placeholder="Buscar habilidades...">
                </div>

                <div id="agregarHabilidadContainer" style="display:none;" class="mb-3">
                    <input type="text" id="nuevaHabilidad" class="form-control" placeholder="Nueva habilidad">
                    <button type="button" class="btn btn-success mt-2" onclick="agregarHabilidad()">Agregar habilidad</button>
                </div>

                <div class="row">
                    <div class="col-md-6">
                        <label class="form-label">Habilidades disponibles</label>
                        <select id="listaHabilidades" size="10" class="form-select" style="height: 250px; overflow-y: scroll;">
                            @foreach (var habilidad in Model.HabilidadesDisponibles)
                            {
                                <option value="@habilidad.id_habilidad">@habilidad.nombre</option>
                            }
                        </select>
                        <button type="button" class="btn btn-primary mt-2" onclick="agregarAHabilidadesSeleccionadas()">Agregar a Mis habilidades</button>
                    </div>

                    <div class="col-md-6">
                        <label class="form-label">Mis habilidades</label>
                        <ul id="misHabilidades" class="list-group" style="height: 250px; overflow-y: scroll;">
                            @if (Model.HabilidadIds != null)
                            {
                                foreach (var id in Model.HabilidadIds)
                                {
                                    var hab = Model.HabilidadesDisponibles.FirstOrDefault(h => h.id_habilidad == id);
                                    if (hab != null)
                                    {
                                        <li class="list-group-item d-flex justify-content-between align-items-center" data-id="@hab.id_habilidad">
                                            @hab.nombre
                                            <button type="button" class="btn btn-sm btn-danger" onclick="quitarHabilidad('@hab.id_habilidad')">x</button>
                                        </li>
                                    }
                                }
                            }
                        </ul>
                    </div>
                </div>

                @* Select oculto que mantiene las habilidades seleccionadas para enviar al servidor *@
                <select asp-for="HabilidadIds" id="HabilidadIds" name="HabilidadIds" multiple hidden>
                    @* Opciones sincronizadas por JS *@
                </select>

                <span asp-validation-for="HabilidadIds" class="text-danger"></span>
            </div>
        </div>

        @* Formación Académica *@
        <div class="card mb-4">
            <div class="card-header">Formación Académica</div>
            <div class="card-body">
                <div class="form-group">
                    <label asp-for="NuevaFormacion.Titulo" class="form-label"></label>
                    <input asp-for="NuevaFormacion.Titulo" class="form-control" />
                    <span asp-validation-for="NuevaFormacion.Titulo" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="NuevaFormacion.Institucion" class="form-label"></label>
                    <input asp-for="NuevaFormacion.Institucion" class="form-control" />
                    <span asp-validation-for="NuevaFormacion.Institucion" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="NuevaFormacion.Especialidad" class="form-label"></label>
                    <input asp-for="NuevaFormacion.Especialidad" class="form-control" />
                    <span asp-validation-for="NuevaFormacion.Especialidad" class="text-danger"></span>
                </div>
            </div>
        </div>

        @* Experiencia Profesional *@
        <div class="card mb-4">
            <div class="card-header">Experiencia Profesional</div>
            <div class="card-body">
                <div class="form-group">
                    <label asp-for="NuevaExperiencia.Empresa" class="form-label"></label>
                    <input asp-for="NuevaExperiencia.Empresa" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="NuevaExperiencia.Puesto" class="form-label"></label>
                    <input asp-for="NuevaExperiencia.Puesto" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="NuevaExperiencia.FechaInicio" class="form-label"></label>
                    <input asp-for="NuevaExperiencia.FechaInicio" class="form-control" type="date" />
                </div>
                <div class="form-group">
                    <label asp-for="NuevaExperiencia.FechaFin" class="form-label"></label>
                    <input asp-for="NuevaExperiencia.FechaFin" class="form-control" type="date" />
                </div>
            </div>
        </div>

        @* Certificaciones *@
        <div class="card mb-4">
            <div class="card-header">Certificaciones</div>
            <div class="card-body">
                <div class="form-group">
                    <label asp-for="NuevaCertificacion.Nombre" class="form-label"></label>
                    <input asp-for="NuevaCertificacion.Nombre" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="NuevaCertificacion.FechaObtencion" class="form-label"></label>
                    <input asp-for="NuevaCertificacion.FechaObtencion" class="form-control" type="date" />
                </div>
            </div>
        </div>

        <div class="text-center mb-4">
            <button type="submit" class="btn btn-success me-2 px-4">Guardar Cambios</button>
            <a asp-action="Index" asp-controller="Perfil" class="btn btn-outline-danger px-4">Cancelar</a>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        // Mostrar/ocultar input agregar habilidad
        function toggleAgregarHabilidad() {
            const container = document.getElementById('agregarHabilidadContainer');
            container.style.display = container.style.display === 'none' ? 'block' : 'none';
        }

        // Filtrar habilidades disponibles
        function filtrarHabilidades() {
            const filter = document.getElementById('buscarHabilidad').value.toLowerCase();
            const select = document.getElementById('listaHabilidades');
            for (let i = 0; i < select.options.length; i++) {
                const text = select.options[i].text.toLowerCase();
                select.options[i].style.display = text.includes(filter) ? '' : 'none';
            }
        }

        // Agregar nueva habilidad a lista disponible y seleccionar
        function agregarHabilidad() {
            const input = document.getElementById('nuevaHabilidad');
            const nuevaHabilidad = input.value.trim();
            if (!nuevaHabilidad) {
                alert('Por favor, escribe una habilidad');
                return;
            }

            // Crear nuevo option en lista disponibles
            const select = document.getElementById('listaHabilidades');
            // Revisar que no exista ya esa habilidad (por texto)
            for(let i=0; i<select.options.length; i++) {
                if(select.options[i].text.toLowerCase() === nuevaHabilidad.toLowerCase()) {
                    alert('Esta habilidad ya existe en la lista disponible');
                    input.value = '';
                    return;
                }
            }

            const nuevaOption = document.createElement('option');
            nuevaOption.text = nuevaHabilidad;
            nuevaOption.value = 'nueva_' + Date.now();
            select.add(nuevaOption);
            input.value = '';
            input.focus();
        }

        // Agregar habilidades seleccionadas a "Mis habilidades"
        function agregarAHabilidadesSeleccionadas() {
            const selectDisponibles = document.getElementById('listaHabilidades');
            const misHabilidades = document.getElementById('misHabilidades');

            // Recorrer opciones seleccionadas y añadirlas a la lista si no existen
            for(let i=0; i < selectDisponibles.options.length; i++) {
                const option = selectDisponibles.options[i];
                if(option.selected && option.style.display !== 'none') {
                    // Verificar que no exista en mis habilidades
                    if(!misHabilidades.querySelector(`li[data-id="${option.value}"]`)) {
                        const li = document.createElement('li');
                        li.className = 'list-group-item d-flex justify-content-between align-items-center';
                        li.setAttribute('data-id', option.value);
                        li.textContent = option.text;

                        // Botón eliminar
                        const btn = document.createElement('button');
                        btn.type = 'button';
                        btn.className = 'btn btn-sm btn-danger';
                        btn.textContent = 'x';
                        btn.onclick = function () { quitarHabilidad(option.value); };

                        li.appendChild(btn);
                        misHabilidades.appendChild(li);
                    }
                    // Deseleccionar para evitar duplicados futuros
                    option.selected = false;
                }
            }

            sincronizarSelectOculto();
        }

        // Quitar habilidad de "Mis habilidades"
        function quitarHabilidad(id) {
            const misHabilidades = document.getElementById('misHabilidades');
            const li = misHabilidades.querySelector(`li[data-id="${id}"]`);
            if(li) {
                misHabilidades.removeChild(li);
                sincronizarSelectOculto();
            }
        }

        // Sincroniza el select oculto para que el formulario envíe las habilidades seleccionadas
        function sincronizarSelectOculto() {
            const selectOculto = document.getElementById('HabilidadIds');
            const misHabilidades = document.getElementById('misHabilidades');
            selectOculto.innerHTML = ''; // Limpiar opciones

            misHabilidades.querySelectorAll('li').forEach(li => {
                const option = document.createElement('option');
                option.value = li.getAttribute('data-id');
                option.selected = true;
                selectOculto.appendChild(option);
            });
        }

        // Inicializar sincronización cuando carga la página
        document.addEventListener('DOMContentLoaded', function() {
            sincronizarSelectOculto();
        });
    </script>
}
