@model SisEmpleo.Models.PostulanteViewModel

@{

}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Workeen - Perfil de Postulante</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #F4F6F9;
            margin: 0;
            font-family: 'Segoe UI', Arial, sans-serif;
            color: #333;
        }

        

        .btn-profile {
            background-color: #1E3A8A;
            border: none;
            color: #FFFFFF;
            padding: 0.6rem 1.8rem;
            font-weight: 600;
            border-radius: 8px;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

            .btn-profile:hover {
                background-color: #152A66;
                transform: translateY(-2px);
            }

        .btn-logout {
            background-color: #F97316;
            border: none;
            color: #FFFFFF;
            padding: 0.6rem 1.8rem;
            font-weight: 600;
            border-radius: 8px;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

            .btn-logout:hover {
                background-color: #E86100;
                transform: translateY(-2px);
            }

        .hero-section {
            background: linear-gradient(135deg, rgba(30, 58, 138, 0.9), rgba(249, 115, 22, 0.7)), url('/img/hero-bg.jpg') no-repeat center center;
            background-size: cover;
            color: #FFFFFF;
            text-align: center;
            padding: 6rem 2rem;
            position: relative;
        }

        .hero-content h1 {
            font-size: 2.8rem;
            font-weight: 700;
            margin-bottom: 1rem;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }

        .hero-content p {
            font-size: 1.3rem;
            opacity: 0.9;
        }

        .profile-section {
            padding: 4rem 2rem;
            background-color: #FFFFFF;
            min-height: 100vh;
        }

        .profile-card {
            background-color: #FFFFFF;
            border-radius: 12px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
            padding: 2rem;
            transition: transform 0.3s ease;
        }

            .profile-card:hover {
                transform: translateY(-5px);
            }

        .card-header {
            background-color: #1E3A8A;
            color: #FFFFFF;
            padding: 1.5rem;
            border-radius: 12px 12px 0 0;
            font-size: 1.8rem;
            font-weight: 600;
        }

        .card-body {
            padding: 2rem;
        }

            .card-body h4 {
                color: #1E3A8A;
                font-weight: 600;
                margin-top: 1.5rem;
                margin-bottom: 1rem;
                border-bottom: 2px solid #F97316;
                display: inline-block;
                padding-bottom: 0.3rem;
            }

            .card-body p {
                font-size: 1.1rem;
                margin-bottom: 0.75rem;
                line-height: 1.6;
            }

                .card-body p strong {
                    color: #374151;
                }

        .list-group-item {
            background-color: #F9FAFB;
            border: none;
            border-radius: 8px;
            padding: 1.2rem;
            margin-bottom: 0.75rem;
            font-size: 1.05rem;
            color: #374151;
            transition: background-color 0.3s ease;
        }

            .list-group-item:hover {
                background-color: #F1F5F9;
            }

        .btn-primary {
            background-color: #F97316;
            border: none;
            color: #FFFFFF;
            padding: 0.75rem 2rem;
            font-weight: 600;
            border-radius: 8px;
            transition: background-color 0.3s ease, transform 0.2s ease;
        }

            .btn-primary:hover {
                background-color: #E86100;
                transform: translateY(-2px);
            }


    </style>
</head>
<body>

    <!-- Hero Section -->
    <section class="hero-section">
        <div class="hero-content">
            <h1>¡Hola, @Model.Postulante.nombre!</h1>
            <p>Tu perfil es tu carta de presentación. ¡Mantenlo actualizado para destacar!</p>
        </div>
    </section>

    <!-- Profile Section -->
    <section class="profile-section">
        <div class="container">
            <div class="profile-card mb-4">
                <div class="card-header">
                    <h3>@Model.Postulante.nombre</h3>
                </div>
                <div class="card-body">
                    <p><strong>Dirección:</strong> @Model.Postulante.direccion</p>

                    <h4>Contacto</h4>
                    <p><strong>Email:</strong> @(Model.Contacto?.email != null ? Model.Contacto.email : "No especificado")</p>
                    <p><strong>Teléfono:</strong> @(Model.Contacto?.telefono != null ? Model.Contacto.telefono : "No especificado")</p>

                    <h4>Currículum</h4>
                    @if (Model.Curriculum != null)
                    {
                        <p><strong>Habilidades:</strong> @(Model.Curriculum.habilidades != null ? Model.Curriculum.habilidades : "No especificado")</p>
                        <p><strong>Idiomas:</strong> @(Model.Curriculum.idiomas != null ? Model.Curriculum.idiomas : "No especificado")</p>
                        <p><strong>Certificaciones:</strong> @(Model.Curriculum.certificaciones != null ? Model.Curriculum.certificaciones : "No especificado")</p>

                        <h4>Formación Académica</h4>
                        @if (Model.Formaciones != null && Model.Formaciones.Any())
                        {
                            <ul class="list-group">
                                @foreach (var formacion in Model.Formaciones)
                                {
                                    <li class="list-group-item">
                                        @formacion.Titulo.nombre - @formacion.Institucion.nombre (Fecha: @formacion.fecha)
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p>No hay formación académica registrada.</p>
                        }

                        <h4>Experiencia Profesional</h4>
                        @if (Model.Experiencias != null && Model.Experiencias.Any())
                        {
                            <ul class="list-group">
                                @foreach (var experiencia in Model.Experiencias)
                                {
                                    <li class="list-group-item">
                                        @experiencia.puesto - @experiencia.empresa (Desde: @experiencia.fecha_inicio - Hasta: @(experiencia.fecha_fin != null ? experiencia.fecha_fin : "Actualidad"))
                                    </li>
                                }
                            </ul>
                        }
                        else
                        {
                            <p>No hay experiencia profesional registrada.</p>
                        }
                    }
                    else
                    {
                        <p>No tiene un currículum registrado.</p>
                    }

                    <a href="@Url.Action("EditarPerfil", "Perfil")" class="btn btn-primary mt-3">Editar Perfil</a>
                </div>
            </div>
        </div>
    </section>


    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>